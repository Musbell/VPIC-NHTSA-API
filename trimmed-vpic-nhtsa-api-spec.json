{
  "openapi": "3.0.3",
  "info": {
    "description": "The NHTSA Product Information Catalog Vehicle Listing (vPIC) Application Programming Interface (API) provides different ways to gather information on Vehicles and their specifications. The format parameter specifies the desired format of the response data, and the allowed values for this parameter are limited to \"xml\", \"csv\", or \"json\"",
    "title": "VPIC-NHTSA API",
    "version": "1.0.0",
    "contact": {
      "name": "NHTSA",
      "url": "https://vpic.nhtsa.dot.gov/"
    }
  },
  "servers": [
    {
      "url": "https://vpic.nhtsa.dot.gov/api"
    }
  ],
  "paths": {
    "/vehicles/GetAllMakes": {
      "get": {
        "tags": [
          "Makes"
        ],
        "summary": "All Makes",
        "description": "This provides a list of all the Makes available in vPIC Dataset.",
        "operationId": "allMakes",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "xml",
                "csv",
                "json"
              ],
              "type": "string",
              "example": "json"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful call"
          }
        }
      }
    },
    "/vehicles/GetAllManufacturers": {
      "get": {
        "tags": [
          "Manufacturers"
        ],
        "summary": "All Manufacturers",
        "description": "This provides a list of all the Manufacturers available in vPIC Dataset.",
        "operationId": "manufacturers",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "xml",
                "csv",
                "json"
              ],
              "type": "string",
              "example": "json"
            }
          },
          {
            "name": "ManufacturerType",
            "in": "query",
            "description": "If first parameter is a number - method will do exact match on Manufacturer's Id.If first parameter is a string - it will look for manufacturers whose name is LIKE the provided name (it accepts a partial manufacturer name as an input). Multiple results are returned in case of multiple matches.",
            "required": true,
            "schema": {
              "example": "Intermediate",
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": true,
            "description": "Results are provided in pages of 100 items, use parameter 'page' to specify 1-st (default), 2nd, 3rd, ...Nth ... page.",
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful call"
          }
        }
      }
    },
    "/vehicles/GetManufacturerDetails/{manufacturer}": {
      "get": {
        "tags": [
          "Manufacturers"
        ],
        "summary": "Manufacturer Details",
        "description": "This provides the details for a specific manufacturer that is requested.",
        "operationId": "manufacturerDetails",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "xml",
                "csv",
                "json"
              ],
              "type": "string",
              "example": "json"
            }
          },
          {
            "name": "manufacturer",
            "in": "path",
            "description": "If first parameter is a number - method will do exact match on Manufacturer's Id.If first parameter is a string - it will look for manufacturers whose name is LIKE the provided name (it accepts a partial manufacturer name as an input). Multiple results are returned in case of multiple matches.",
            "required": true,
            "schema": {
              "example": "honda",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ManufacturerName"
                },
                {
                  "$ref": "#/components/schemas/ManufacturerId"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful call"
          }
        }
      }
    },
    "/vehicles/GetMakeForManufacturer/{manufacturer}": {
      "get": {
        "tags": [
          "Makes"
        ],
        "summary": "Makes for Manufacturer by Manufacturer Name",
        "description": "This returns all the Makes in the vPIC dataset for a specified manufacturer that is requested.",
        "operationId": "makesForManufacturerByManufacturerName",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "xml",
                "csv",
                "json"
              ],
              "type": "string",
              "example": "json"
            }
          },
          {
            "name": "manufacturer",
            "in": "path",
            "description": "If first parameter is a number - method will do exact match on Manufacturer's Id.If first parameter is a string - it will look for manufacturers whose name is LIKE the provided name (it accepts a partial manufacturer name as an input). Multiple results are returned in case of multiple matches.",
            "required": true,
            "schema": {
              "example": "honda",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ManufacturerName"
                },
                {
                  "$ref": "#/components/schemas/ManufacturerId"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful call"
          }
        }
      }
    },
    "/vehicles/GetMakesForVehicleType/{vehicleType}": {
      "get": {
        "tags": [
          "Makes"
        ],
        "summary": "Makes for Vehicle Type by Vehicle Type Name",
        "description": "This returns all the Makes in the vPIC dataset for a specified vehicle type whose name is LIKE the vehicle type name in vPIC Dataset",
        "operationId": "MakesForVehicleTypeByVehicleTypeName",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "xml",
                "csv",
                "json"
              ],
              "type": "string",
              "example": "json"
            }
          },
          {
            "name": "vehicleType",
            "in": "path",
            "required": true,
            "description": " Vehicle Type name can be a partial name, or a full name for more specificity (e.g., 'Vehicle', 'Moto', 'Low Speed Vehicle', etc.)",
            "schema": {
              "example": "car",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/VehicleTypeString"
                },
                {
                  "$ref": "#/components/schemas/VehicleTypeInteger"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful call"
          }
        }
      }
    },
    "/vehicles/GetVehicleTypesForMake/{makeName}": {
      "get": {
        "tags": [
          "Vehicle Types"
        ],
        "summary": "Vehicle Types for Make by Name",
        "description": "This returns all the Vehicle Types in the vPIC dataset for a specified Make whose name is LIKE the make name in vPIC Dataset",
        "operationId": "vehicleTypesForMakeByName",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "xml",
                "csv",
                "json"
              ],
              "type": "string",
              "example": "json"
            }
          },
          {
            "name": "makeName",
            "in": "path",
            "required": true,
            "description": "Make name can be a partial name, or a full name for more specificity (e.g., 'Merc;, 'Mercedes Benz', etc.)",
            "schema": {
              "example": "mercedes",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful call"
          }
        }
      }
    },
    "/vehicles/GetVehicleTypesForMakeId/{makeId}": {
      "get": {
        "tags": [
          "Vehicle Types"
        ],
        "summary": "Vehicle Types for Make by Id",
        "description": "This returns all the Vehicle Types in the vPIC dataset for a specified Make whose ID equals the make ID in vPIC Dataset.",
        "operationId": "vehicleTypesForMakeById",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "xml",
                "csv",
                "json"
              ],
              "type": "string",
              "example": "json"
            }
          },
          {
            "name": "makeId",
            "in": "path",
            "required": true,
            "schema": {
              "example": 450,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful call"
          }
        }
      }
    },
    "/vehicles/GetModelsForMake/{manufacturer}": {
      "get": {
        "tags": [
          "Models"
        ],
        "summary": "Models for Make",
        "description": "This returns the Models in the vPIC dataset for a specified Make whose name is LIKE the Make in vPIC Dataset. Make can be a partial, or a full for more specificity (e.g., ;Harley', 'Harley Davidson', etc.)",
        "operationId": "modelsForMake",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "xml",
                "csv",
                "json"
              ],
              "type": "string",
              "example": "json"
            }
          },
          {
            "name": "manufacturer",
            "in": "path",
            "description": "If first parameter is a number - method will do exact match on Manufacturer's Id.If first parameter is a string - it will look for manufacturers whose name is LIKE the provided name (it accepts a partial manufacturer name as an input). Multiple results are returned in case of multiple matches.",
            "required": true,
            "schema": {
              "example": "honda",
              "oneOf": [
                {
                  "$ref": "#/components/schemas/ManufacturerName"
                },
                {
                  "$ref": "#/components/schemas/ManufacturerId"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful call"
          }
        }
      }
    },
    "/vehicles/GetModelsForMakeId/{makeId}": {
      "get": {
        "tags": [
          "Models"
        ],
        "summary": "Models for MakeId",
        "description": "This returns the Models in the vPIC dataset for a specified Make whose Id is EQUAL the MakeId in vPIC Dataset.",
        "operationId": "modelsForMakeId",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "xml",
                "csv",
                "json"
              ],
              "type": "string",
              "example": "json"
            }
          },
          {
            "name": "makeId",
            "in": "path",
            "required": true,
            "schema": {
              "example": 440,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful call"
          }
        }
      }
    },
    "/vehicles/GetModelsForMakeYear/make/{make}/modelyear/{year}": {
      "get": {
        "tags": [
          "Models"
        ],
        "summary": "Models for Make Year",
        "description": "This returns the Models in the vPIC dataset for a specified year and Make whose name is LIKE the Make in vPIC Dataset.",
        "operationId": "ModelsForMakeYear",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "xml",
                "csv",
                "json"
              ],
              "type": "string",
              "example": "json"
            }
          },
          {
            "name": "make",
            "in": "path",
            "required": true,
            "description": "Make name can be a partial name, or a full name for more specificity (e.g., 'Merc;, 'Mercedes Benz', etc.)",
            "schema": {
              "example": "honda",
              "type": "string"
            }
          },
          {
            "name": "year",
            "in": "path",
            "required": true,
            "description": "ModelYear is integer (greater than 1995)",
            "schema": {
              "example": 2015,
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful call"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "Makes"
    },
    {
      "name": "Manufacturers"
    },
    {
      "name": "Vehicle Types"
    },
    {
      "name": "Models"
    }
  ],
  "components": {
    "schemas": {
      "ManufacturerName": {
        "type": "string",
        "example": "hon"
      },
      "ManufacturerId": {
        "type": "integer",
        "example": 987
      },
      "VehicleTypeString": {
        "type": "string",
        "example": "car"
      },
      "VehicleTypeInteger": {
        "type": "integer",
        "example": 2
      }
    }
  }
}
